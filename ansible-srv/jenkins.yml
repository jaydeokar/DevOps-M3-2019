---
- hosts: all
  vars:
      admin_user_pass: userPasswordDemo
      jenkins_plugins: 
          - token-macro
          - build-pipeline-plugin
  tasks:
  - name: install jre8
    apt:
     name: openjdk-8-jre
     state: present
     update_cache: yes
    become: true

  - name: add jenkins repo key
    apt_key:
     url: https://pkg.jenkins.io/debian/jenkins.io.key
     state: present
    become: true

  - name: add jenkins repo list file into sources.list.d
    apt_repository:
     repo: deb http://pkg.jenkins.io/debian-stable binary/
     state: present
    become: true

  - name: install jenkins
    apt:
     name: jenkins
     state: present
     update_cache: yes
    become: true

  - name: install git
    apt:
     name: git
     state: present
    become: true

  - name: read admin pwd
    become: true
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd
    

  - name: unlock and add admin user
    jenkins_script:
     script: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount('jenkins', '${user_pwd}')
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setAuthorizationStrategy(strategy)
      instance.save()
     args:
      user_pwd: "{{ admin_user_pass }}"
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: complete setup wizard
    jenkins_script:
     script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
     user: admin
     password: "{{ adminpwd.stdout }}"

  - name: install plugin
    jenkins_plugin:
     name: "{{ item }}"
     state: latest
     url_username: admin
     url_password: "{{ adminpwd.stdout }}"
    with_items: "{{ jenkins_plugins }}"
    become: true


  - name: Install nginx and node
    apt:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
          - nginx
          - nodejs
          - npm
          - python-pip
    become: true

  - name: Install MongoDB
    become: true
    apt:
        deb: https://repo.mongodb.org/apt/ubuntu/dists/trusty/mongodb-org/4.0/multiverse/binary-amd64/mongodb-org-server_4.0.6_amd64.deb
        state: present

  - name: Install the latest pymongo package
    pip: name=pymongo state=latest use_mirrors=no

  - name: Copy service file to web-srv
    become: true
    template:
      src: template/mongod.service
      dest: /lib/systemd/system/mongod.service 
      owner: root
      group: root
      mode: 0644

  - name: Make sure MongoDB service is running
    systemd:
      state: started
      name: mongod
    become: true

  - mongodb_user:
      database: admin
      name: admin_mongo_user
      password: 123456
      state: present

  - name: Set all environment variables
    become: true
    blockinfile: 
      path: /root/.bashrc 
      content: |
          MONGO_PORT=3002
          MONGO_IP=127.0.0.1
          MONGO_USER=admin_mongo_user
          MONGO_PASSWORD=123456
          MAIL_USER=csc519s19gworah@gmail.com
          MAIL_PASSWORD=abcabc
          MAIL_SMTP=smtp.gmail.com
          
  - name: Source the bashrc file
    become: true
    shell: source /root/.bashrc
    args:
     executable: /bin/bash

  - name: Checkout from git repo
    git:
      repo: 'https://github.com/chrisparnin/checkbox.io.git'
      dest: /home/vagrant/checkboxCode


